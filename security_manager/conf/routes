# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /security-manager/swagger.json controllers.Swagger.swaggerSpec(name="security_manager.yaml")

GET         /security-manager               controllers.Assets.versioned(path="/public/swagger-ui", file: Asset = "index.html")

#GET         /                              controllers.Assets.versioned(path="/public/swagger-ui", file: Asset = "index.html")

GET         /index.html                    controllers.Assets.versioned(path="/public/swagger-ui", file: Asset = "index.html")

GET         /o2c.html                      controllers.Assets.versioned(path="/public/swagger-ui", file: Asset = "o2c.html")

GET         /favicon.ico                   controllers.Assets.versioned(path="/public/swagger/images-ui", file: Asset = "favicon.ico")

GET         /api/*file                     controllers.Assets.versioned(path="/public/swagger-ui", file: Asset)

->          /security-manager/v1           security_manager.yaml.Routes

GET         /metrics                         controllers.MetricsController.index

### NoDocs ###
GET         /security-manager/docs/swagger-ui/*file controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET         /security-manager/*file         controllers.Assets.versioned(path="/public", file: Asset)


# Temporary Ckan API outside swagger file
GET         /sso-manager/secured/register                               controllers.SSOController.register
GET         /sso-manager/secured/retriveCookie/:appName                 controllers.SSOController.retriveCookie(appName:String)
GET         /sso-manager/secured/retriveCachedCookie/:appName           controllers.SSOController.retriveCachedCookie(appName:String)
GET         /sso-manager/secured/login/:appName                         controllers.SSOController.login(appName:String)
GET         /sso-manager/secured/test                                   controllers.SSOController.test

GET         /sso-manager/internal/register                              controllers.SSOController.registerInternal(username:String,password:String)
GET         /sso-manager/internal/retriveCookie/:appName                controllers.SSOController.retriveCookieInternal(username:String,appName:String)
